{"version":3,"sources":["constants/appConstants.tsx","helpers/navigationMenuHelper.ts","components/NavigationMenu.tsx","models/OHLCData.ts","components/Chart.jsx","components/LiveChart.tsx","components/Overview.tsx","services/overviewService.ts","App.tsx","i18n.js","serviceWorker.ts","index.tsx"],"names":["TRANSLATION_TYPES","useStyles","makeStyles","theme","createStyles","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","menuItems","text","icon","link","NavigationMenu","handleMenu","open","classes","t","useTranslation","TRANSLATION","useTheme","CssBaseline","AppBar","position","className","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","to","style","Drawer","anchor","paper","direction","Divider","List","map","item","index","key","ListItem","button","ListItemIcon","ListItemText","primary","OHLCData","obj","date","high","low","close","volume","data","split","this","Date","OHLCChartWithElderImpulseIndicator","changeCalculator","change","ema12","ema","id","options","windowSize","merge","d","c","accessor","macdCalculator","macd","fast","slow","signal","elderImpulseCalculator","elderImpulse","macdSource","emaSource","props","type","initialData","ratio","refetch","calculatedData","discontinuousTimeScaleProvider","inputDateAccessor","xScaleProvider","xScale","xAccessor","displayXAccessor","xExtents","last","Math","max","length","height","margin","left","right","top","bottom","seriesName","mouseMoveEvent","panEvent","zoomEvent","yExtents","axisAt","orient","showTicks","outerTickSize","zoomEnabled","ticks","at","displayFormat","format","yAccessor","stroke","itemType","edgeAt","fill","origin","onReset","e","console","log","w","h","tickFormat","React","Component","defaultProps","fitWidth","LiveChart","socket","useState","liveData","setLiveData","useEffect","socketIOClient","emit","state","on","data1","ack","previousLiveData","tempData","push","setTimeout","disconnect","Chart","overviewData","setOverviewData","fetchHistoricalData","requestParamObj","method","url","APP_URL","headers","axios","then","response","ohlcData","catch","error","getHistoricalData","App","setOpen","path","Overview","resources","en","translation","fr","i18n","use","initReactI18next","init","lng","navigator","language","userLanguage","ns","defaultNS","fallbackNS","load","interpolation","escapeValue","nonExplicitWhitelist","whitelist","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b329917e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nexport const WEBSOCKET_URL = \"http://kaboom.rksv.net/watch\";\r\nexport const APP_URL = \"http://kaboom.rksv.net/api/\";\r\nexport const OVERVIEW_URL = APP_URL + \"historical\";\r\n\r\nexport enum TRANSLATION_TYPES {\r\n  \"TRANSLATION\" = \"translation\",\r\n}\r\nexport const menuItems = [\r\n  { text: `navigationMenu.overview`, icon: <HomeIcon />, link: \"/\" },\r\n  {\r\n    text: `navigationMenu.liveChart`,\r\n    icon: <LiveTvIcon />,\r\n    link: \"/live\",\r\n  },\r\n];\r\n","\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  }),\r\n);","import React, {useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport clsx from \"clsx\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { TRANSLATION_TYPES, menuItems} from \"../constants/appConstants\";\r\n\r\n\r\ninterface NavigationMenuProps {\r\n  handleMenu: (open: boolean) => void;\r\n  open: boolean;\r\n  classes: any;\r\n}\r\n\r\nconst NavigationMenu: React.FunctionComponent<NavigationMenuProps> = ({\r\n  handleMenu,\r\n  open,\r\n  classes,\r\n}) => {\r\n  const { t } = useTranslation(TRANSLATION_TYPES.TRANSLATION);\r\n  const theme = useTheme();\r\n\r\n  const handleDrawerOpen = () => {\r\n    handleMenu(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    handleMenu(false);\r\n  };\r\n\r\n  const handleNavigation = (text: string) => {\r\n    handleMenu(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap >\r\n            <Link to=\"/\" style={{'color': 'white', 'textDecoration': 'none'}}>{t(`appName`)}</Link>\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {menuItems.map((item, index) => (\r\n            <Link\r\n              to={item.link}\r\n              key={item.text}\r\n              onClick={() => handleNavigation(t(item.text))}\r\n              style={{'textDecoration': 'none'}}\r\n            >\r\n              <ListItem button>\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={t(item.text)} />\r\n              </ListItem>\r\n            </Link>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavigationMenu;\r\n","export class OHLCData {\r\n  public date: Date;\r\n  public open: number;\r\n  public high: number;\r\n  public low: number;\r\n  public close: number;\r\n  public volume: number;\r\n\r\n  public constructor(obj?: string) {\r\n    let data = obj && obj.split(\",\");\r\n    this.date = (data && new Date(+data[0])) || new Date();\r\n    this.open = (data && +data[1]) || 0;\r\n    this.high = (data && +data[2]) || 0;\r\n    this.low = (data && +data[3]) || 0;\r\n    this.close = (data && +data[4]) || 0;\r\n    this.volume = (data && +data[5]) || 0;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { format } from \"d3-format\";\r\n\r\nimport { ChartCanvas, Chart, ZoomButtons } from \"react-stockcharts\";\r\nimport { OHLCSeries, LineSeries } from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport {\r\n  CrossHairCursor,\r\n  EdgeIndicator,\r\n  MouseCoordinateY,\r\n} from \"react-stockcharts/lib/coordinates\";\r\n\r\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\r\nimport {\r\n  OHLCTooltip,\r\n  MovingAverageTooltip,\r\n} from \"react-stockcharts/lib/tooltip\";\r\nimport {\r\n  ema,\r\n  macd,\r\n  change,\r\n  elderImpulse,\r\n} from \"react-stockcharts/lib/indicator\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { last } from \"react-stockcharts/lib/utils\";\r\n\r\nclass OHLCChartWithElderImpulseIndicator extends React.Component {\r\n  render() {\r\n    const changeCalculator = change();\r\n\r\n    const ema12 = ema()\r\n      .id(1)\r\n      .options({ windowSize: 18 })\r\n      .merge((d, c) => {\r\n        d.ema12 = c;\r\n      })\r\n      .accessor((d) => d.ema12);\r\n\r\n    const macdCalculator = macd()\r\n      .options({\r\n        fast: 12,\r\n        slow: 26,\r\n        signal: 9,\r\n      })\r\n      .merge((d, c) => {\r\n        d.macd = c;\r\n      })\r\n      .accessor((d) => d.macd);\r\n\r\n    const elderImpulseCalculator = elderImpulse()\r\n      .macdSource(macdCalculator.accessor())\r\n      .emaSource(ema12.accessor());\r\n\r\n    const { type, data: initialData, width, ratio, refetch } = this.props;\r\n\r\n    const calculatedData = elderImpulseCalculator(\r\n      macdCalculator(ema12(changeCalculator(initialData)))\r\n    );\r\n    const xScaleProvider = discontinuousTimeScaleProvider.inputDateAccessor(\r\n      (d) => d.date\r\n    );\r\n    const { data, xScale, xAccessor, displayXAccessor } = xScaleProvider(\r\n      calculatedData\r\n    );\r\n\r\n    const start = xAccessor(last(data));\r\n    const end = xAccessor(data[Math.max(0, data.length - 150)]);\r\n    const xExtents = [start, end];\r\n\r\n    return (\r\n      <ChartCanvas\r\n        height={500}\r\n        width={width}\r\n        ratio={ratio}\r\n        margin={{ left: 70, right: 70, top: 20, bottom: 30 }}\r\n        type={type}\r\n        seriesName=\"MSFT\"\r\n        data={data}\r\n        xScale={xScale}\r\n        xAccessor={xAccessor}\r\n        displayXAccessor={displayXAccessor}\r\n        xExtents={xExtents}\r\n        mouseMoveEvent={true}\r\n        panEvent={true}\r\n        zoomEvent={true}\r\n      >\r\n        <Chart\r\n          id={1}\r\n          height={300}\r\n          yExtents={(d) => [d.high, d.low]}\r\n          padding={{ top: 10, bottom: 10 }}\r\n        >\r\n          <XAxis\r\n            axisAt=\"bottom\"\r\n            orient=\"bottom\"\r\n            showTicks={false}\r\n            outerTickSize={0}\r\n            zoomEnabled={true}\r\n          />\r\n          <YAxis axisAt=\"right\" orient=\"right\" ticks={2} zoomEnabled={true} />\r\n\r\n          <MouseCoordinateY\r\n            at=\"right\"\r\n            orient=\"right\"\r\n            displayFormat={format(\".2f\")}\r\n          />\r\n\r\n          <LineSeries yAccessor={ema12.accessor()} stroke={ema12.stroke()} />\r\n\r\n          <OHLCSeries\r\n            stroke={(d) => elderImpulseCalculator.stroke()[d.elderImpulse]}\r\n          />\r\n\r\n          <EdgeIndicator\r\n            itemType=\"last\"\r\n            orient=\"right\"\r\n            edgeAt=\"right\"\r\n            yAccessor={(d) => d.close}\r\n            fill={(d) => (d.close > d.open ? \"#6BA583\" : \"#FF0000\")}\r\n          />\r\n\r\n          <OHLCTooltip origin={[-40, -10]} />\r\n          <ZoomButtons onReset={refetch}/>\r\n          <MovingAverageTooltip\r\n            onClick={(e) => console.log(e)}\r\n            origin={[-38, 5]}\r\n            options={[\r\n              {\r\n                yAccessor: ema12.accessor(),\r\n                type: \"EMA\",\r\n                stroke: ema12.stroke(),\r\n                windowSize: ema12.options().windowSize,\r\n              },\r\n            ]}\r\n          />\r\n        </Chart>\r\n        <Chart\r\n          id={2}\r\n          height={150}\r\n          yExtents={(d) => d.volume}\r\n          origin={(w, h) => [0, h - 300]}\r\n        >\r\n          <YAxis\r\n            axisAt=\"left\"\r\n            orient=\"left\"\r\n            ticks={5}\r\n            tickFormat={format(\".2s\")}\r\n            zoomEnabled={true}\r\n          />\r\n\r\n          <MouseCoordinateY\r\n            at=\"left\"\r\n            orient=\"left\"\r\n            displayFormat={format(\".4s\")}\r\n          />\r\n        </Chart>\r\n\r\n        <CrossHairCursor />\r\n      </ChartCanvas>\r\n    );\r\n  }\r\n}\r\n\r\nOHLCChartWithElderImpulseIndicator.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  width: PropTypes.number.isRequired,\r\n  ratio: PropTypes.number.isRequired,\r\n  type: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\r\n  refetch: PropTypes.func\r\n};\r\n\r\nOHLCChartWithElderImpulseIndicator.defaultProps = {\r\n  type: \"svg\",\r\n};\r\nOHLCChartWithElderImpulseIndicator = fitWidth(\r\n  OHLCChartWithElderImpulseIndicator\r\n);\r\n\r\nexport default OHLCChartWithElderImpulseIndicator;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport clsx from \"clsx\";\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport { TRANSLATION_TYPES, WEBSOCKET_URL } from \"../constants/appConstants\";\r\nimport { OHLCData } from \"../models/OHLCData\";\r\nimport Chart from \"./Chart\";\r\n\r\ninterface LiveChartProps {\r\n  classes: any;\r\n  open: boolean;\r\n}\r\n\r\nconst LiveChart: React.FunctionComponent<LiveChartProps> = ({\r\n  classes,\r\n  open\r\n}) => {\r\n  const { t } = useTranslation(TRANSLATION_TYPES.TRANSLATION);\r\n  const [liveData, setLiveData] = useState<OHLCData[]>([]);\r\n \r\n  let socket;\r\n  useEffect(() => {\r\n    socket = socketIOClient(WEBSOCKET_URL);\r\n    socket.emit(\"sub\", {state:true});\r\n    socket && socket.on(\"data\", (data1, ack) => {\r\n      setLiveData(previousLiveData => {\r\n        let tempData = [...previousLiveData];\r\n        tempData.push(new OHLCData(data1));\r\n        return tempData;\r\n      });\r\n      setTimeout(()=>ack(1),300);\r\n    });\r\n    return () => {\r\n      socket.emit(\"unsub\", {state:false});\r\n      socket.disconnect()\r\n    };\r\n  }, []);\r\n \r\n  return (\r\n   \r\n    <div\r\n      className={clsx(classes.content, {\r\n        [classes.contentShift]: open,\r\n      })}\r\n    >\r\n      <div className={classes.drawerHeader} />\r\n\r\n      {liveData && liveData.length > 1 && <TypeChooser>\r\n\t\t\t\t{(type: any) => <Chart type={type} data={liveData} width={1000} />}\r\n\t\t\t</TypeChooser>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveChart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport clsx from \"clsx\";\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\n\r\nimport { TRANSLATION_TYPES } from \"../constants/appConstants\";\r\nimport { getHistoricalData } from \"../services/overviewService\";\r\nimport { OHLCData } from \"../models/OHLCData\";\r\nimport Chart from \"./Chart\";\r\ninterface LiveChartProps {\r\n  classes: any;\r\n  open: boolean;\r\n}\r\n\r\nconst LiveChart: React.FunctionComponent<LiveChartProps> = ({\r\n  classes,\r\n  open,\r\n}) => {\r\n  const [overviewData, setOverviewData] = useState<OHLCData[]>();\r\n  const { t } = useTranslation(TRANSLATION_TYPES.TRANSLATION);\r\n  \r\n  useEffect(() => {\r\n    fetchHistoricalData();\r\n  }, []);\r\n  const fetchHistoricalData = () => {\r\n    getHistoricalData().then(response => {\r\n      setOverviewData(response);\r\n  })\r\n  }\r\n  return (\r\n    <div\r\n      className={clsx(classes.content, {\r\n        [classes.contentShift]: open,\r\n      })}\r\n    >\r\n      <div className={classes.drawerHeader} />\r\n\r\n      {overviewData && <TypeChooser>\r\n\t\t\t\t{(type: any) => <Chart type={\"hybrid\"} data={overviewData} width={1000} refetch={fetchHistoricalData} />}\r\n\t\t\t</TypeChooser>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveChart;\r\n","import axios from \"axios\";\r\n\r\nimport { OVERVIEW_URL } from \"../constants/appConstants\";\r\nimport { OHLCData } from \"../models/OHLCData\";\r\n\r\nexport function getHistoricalData() {\r\n  let requestParamObj: any = {\r\n    method: \"GET\",\r\n    url: OVERVIEW_URL,\r\n    headers: {},\r\n  };\r\n  return axios(requestParamObj)\r\n    .then((response) => {\r\n      return response.data.map((ohlcData: any) => new OHLCData(ohlcData));\r\n    })\r\n    .catch((error) => {});\r\n}\r\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { useStyles } from \"./helpers/navigationMenuHelper\";\nimport NavigationMenu from \"./components/NavigationMenu\";\nimport LiveChart from \"./components/LiveChart\";\nimport Overview from \"./components/Overview\";\nimport { OHLCData } from \"./models/OHLCData\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  const classes = useStyles();\n  const [open, setOpen] = useState<boolean>(false);\n\n  const handleMenu = (open: boolean) => {\n    setOpen(open);\n  };\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <NavigationMenu handleMenu={handleMenu} open={open} classes={classes} />\n        <div onClick={() => handleMenu(false)}>\n          <Switch>\n            <Route path=\"/live\">\n              <LiveChart classes={classes} open={open} />\n            </Route>\n            <Route path=\"/\">\n              <Overview classes={classes} open={open} />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\n\r\nimport entranslation from './assets/i18n/locales/en/translation.json';\r\nimport frtranslation from './assets/i18n/locales/fr/translation.json';\r\nconst resources = {\r\n  en: {\r\n    translation: entranslation\r\n  },\r\n  fr: {\r\n    translation: frtranslation\r\n  }\r\n};\r\n\r\ni18n\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    resources,\r\n    lng: navigator.language || navigator.userLanguage,\r\n    ns: ['translation'],\r\n    defaultNS: 'translation',\r\n    fallbackNS: 'translation',\r\n    load: 'languageOnly',\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    },\r\n  nonExplicitWhitelist: true,\r\n    whitelist: ['en', 'fr'],\r\n  });\r\n\r\n  export default i18n;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// this needs to be imported for i18n to kick in\nimport './i18n';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}